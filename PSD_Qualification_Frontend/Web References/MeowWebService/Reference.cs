//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PSD_Qualification_Frontend.MeowWebService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MeowWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MeowWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetMeowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeowOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMeowOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMeowOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMeowOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MeowWebService() {
            this.Url = global::PSD_Qualification_Frontend.Properties.Settings.Default.PSD_Qualification_Frontend_MeowWebService_MeowWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetMeowsCompletedEventHandler GetMeowsCompleted;
        
        /// <remarks/>
        public event GetMeowCompletedEventHandler GetMeowCompleted;
        
        /// <remarks/>
        public event CreateMeowCompletedEventHandler CreateMeowCompleted;
        
        /// <remarks/>
        public event UpdateMeowCompletedEventHandler UpdateMeowCompleted;
        
        /// <remarks/>
        public event DeleteMeowCompletedEventHandler DeleteMeowCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMeows", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMeows() {
            object[] results = this.Invoke("GetMeows", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeowsAsync() {
            this.GetMeowsAsync(null);
        }
        
        /// <remarks/>
        public void GetMeowsAsync(object userState) {
            if ((this.GetMeowsOperationCompleted == null)) {
                this.GetMeowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeowsOperationCompleted);
            }
            this.InvokeAsync("GetMeows", new object[0], this.GetMeowsOperationCompleted, userState);
        }
        
        private void OnGetMeowsOperationCompleted(object arg) {
            if ((this.GetMeowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeowsCompleted(this, new GetMeowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMeow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMeow(string id) {
            object[] results = this.Invoke("GetMeow", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeowAsync(string id) {
            this.GetMeowAsync(id, null);
        }
        
        /// <remarks/>
        public void GetMeowAsync(string id, object userState) {
            if ((this.GetMeowOperationCompleted == null)) {
                this.GetMeowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeowOperationCompleted);
            }
            this.InvokeAsync("GetMeow", new object[] {
                        id}, this.GetMeowOperationCompleted, userState);
        }
        
        private void OnGetMeowOperationCompleted(object arg) {
            if ((this.GetMeowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeowCompleted(this, new GetMeowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMeow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateMeow(string name, int price, string skin, int age) {
            object[] results = this.Invoke("CreateMeow", new object[] {
                        name,
                        price,
                        skin,
                        age});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateMeowAsync(string name, int price, string skin, int age) {
            this.CreateMeowAsync(name, price, skin, age, null);
        }
        
        /// <remarks/>
        public void CreateMeowAsync(string name, int price, string skin, int age, object userState) {
            if ((this.CreateMeowOperationCompleted == null)) {
                this.CreateMeowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMeowOperationCompleted);
            }
            this.InvokeAsync("CreateMeow", new object[] {
                        name,
                        price,
                        skin,
                        age}, this.CreateMeowOperationCompleted, userState);
        }
        
        private void OnCreateMeowOperationCompleted(object arg) {
            if ((this.CreateMeowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMeowCompleted(this, new CreateMeowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMeow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateMeow(string id, string name, int price, string skin, int age) {
            object[] results = this.Invoke("UpdateMeow", new object[] {
                        id,
                        name,
                        price,
                        skin,
                        age});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMeowAsync(string id, string name, int price, string skin, int age) {
            this.UpdateMeowAsync(id, name, price, skin, age, null);
        }
        
        /// <remarks/>
        public void UpdateMeowAsync(string id, string name, int price, string skin, int age, object userState) {
            if ((this.UpdateMeowOperationCompleted == null)) {
                this.UpdateMeowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMeowOperationCompleted);
            }
            this.InvokeAsync("UpdateMeow", new object[] {
                        id,
                        name,
                        price,
                        skin,
                        age}, this.UpdateMeowOperationCompleted, userState);
        }
        
        private void OnUpdateMeowOperationCompleted(object arg) {
            if ((this.UpdateMeowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMeowCompleted(this, new UpdateMeowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMeow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteMeow(string id) {
            object[] results = this.Invoke("DeleteMeow", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMeowAsync(string id) {
            this.DeleteMeowAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteMeowAsync(string id, object userState) {
            if ((this.DeleteMeowOperationCompleted == null)) {
                this.DeleteMeowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMeowOperationCompleted);
            }
            this.InvokeAsync("DeleteMeow", new object[] {
                        id}, this.DeleteMeowOperationCompleted, userState);
        }
        
        private void OnDeleteMeowOperationCompleted(object arg) {
            if ((this.DeleteMeowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMeowCompleted(this, new DeleteMeowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMeowsCompletedEventHandler(object sender, GetMeowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMeowCompletedEventHandler(object sender, GetMeowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateMeowCompletedEventHandler(object sender, CreateMeowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMeowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMeowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateMeowCompletedEventHandler(object sender, UpdateMeowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMeowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMeowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteMeowCompletedEventHandler(object sender, DeleteMeowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMeowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMeowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591